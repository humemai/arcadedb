name: Build and Release Python Packages to PyPI

on:
  release:
    types: [published]  # Trigger when GitHub Release is published
    # Release tag must match 'v*-python' (e.g., v3.0.5-python)

jobs:
  build:
    name: Build Python Distribution (${{ matrix.distribution }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: [headless, minimal, full]
        include:
          - distribution: headless
            environment: pypi-headless
          - distribution: minimal
            environment: pypi-minimal
          - distribution: full
            environment: pypi-full
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build ${{ matrix.distribution }} distribution
        run: |
          cd bindings/python
          ./build-all.sh ${{ matrix.distribution }}
      
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.distribution }}
          path: bindings/python/dist/*.whl
          retention-days: 5

  publish-headless:
    name: Publish arcadedb-embedded-headless to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment: pypi-headless
    permissions:
      id-token: write
    steps:
      - name: Download headless wheel
        uses: actions/download-artifact@v4
        with:
          name: wheel-headless
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-minimal:
    name: Publish arcadedb-embedded-minimal to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment: pypi-minimal
    permissions:
      id-token: write
    steps:
      - name: Download minimal wheel
        uses: actions/download-artifact@v4
        with:
          name: wheel-minimal
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-full:
    name: Publish arcadedb-embedded to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment: pypi-full
    permissions:
      id-token: write
    steps:
      - name: Download full wheel
        uses: actions/download-artifact@v4
        with:
          name: wheel-full
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
